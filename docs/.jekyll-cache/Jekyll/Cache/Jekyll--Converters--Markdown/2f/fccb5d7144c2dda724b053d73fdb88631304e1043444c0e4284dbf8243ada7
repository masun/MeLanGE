I"´<h1 id="how-to-run-melange">How to run MeLanGE</h1>
<h2 id="configure-workflow">Configure workflow</h2>
<p>Configure the workflow according to your needs by editing the file
<code class="language-plaintext highlighter-rouge">config.yaml</code>.</p>

<h2 id="execute-workflow">Execute workflow</h2>
<p>Test your configuration by performing a dry-run via</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>snakemake --use-conda -n
</code></pre></div></div>

<p>Execute the workflow locally via</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>snakemake --use-conda --cores N
</code></pre></div></div>

<p>This will run the workflow locally using <code class="language-plaintext highlighter-rouge">N</code> cores.</p>

<h2 id="verify-workflow--results">Verify workflow &amp; results</h2>

<p><strong>Examine workflow:</strong>
Snakemake has some cool features which are implemented in MeLanGE. One of them is the possibility of automatically creating directed acyclic graph (DAG) of jobs that allows the visualization of the whole workflow.</p>

<p>By running a single command:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>snakemake --dag  | dot -Tsvg &gt; dag.svg
</code></pre></div></div>

<p>A DAG (saved as a .svg figure) is created. It contains a node for each job with the edges connecting them representing the dependencies. The frames of jobs that donâ€™t need to be run (because their output is up-to-date) are dashed.</p>

<p>Example:
<img src="/data/dag.png" alt="dag" /></p>

<p><strong>Investigate results:</strong>
After successful execution, you can create a self-contained interactive HTML report with all results via:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>snakemake --report report.html
</code></pre></div></div>
:ET